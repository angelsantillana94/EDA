#BlueJ class context
comment0.params=nombre\ edad\ estado
comment0.target=Paciente(java.lang.String,\ int,\ int)
comment0.text=\ Constructor\ de\ un\ Paciente\n\ \ @param\ n\ \ Nombre\ del\ paciente\n\ \ @param\ ed\ Edad\ del\ paciente\n\ \ @param\ es\ Estado\ del\ paciente\n
comment1.params=n
comment1.target=Paciente(java.lang.String)
comment1.text=\ Constructor\ aleatorio\ de\ un\ Paciente\n\ \ @param\ n\ \ Nombre\ del\ paciente\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\ Devuelve\ un\ String\ con\ los\ datos\ del\ paciente.\n\ \ @return\ Cadena\ de\ texto\ que\ describe\ al\ paciente\ actual\n
comment11.params=otro
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\n\ Comprueba\ si\ un\ paciente\ es\ igual\ a\ otro,\ esto\ es\ si\ sus\ nombres\n\ \ \ \ coinciden\n\ @param\ \ otro\ \ Paciente\n\ @return\ true\ si\ ambos\ pacientes\ tienen\ el\ mismo\ nombre\ y\ false\ \n\ \ \ \ en\ caso\ contrario\n
comment2.params=
comment2.target=int\ getEstado()
comment2.text=\ Consultor\ del\ estado\ del\ paciente\n\ \ @return\ Estado\ del\ paciente\n
comment3.params=
comment3.target=java.lang.String\ getDescripcionEstado()
comment3.text=\ Consultor\ del\ estado\ de\ un\ paciente\ como\ cadena\ de\ texto\n\ \ @return\ String\ que\ indica\ el\ estado\ del\ paciente\n
comment4.params=
comment4.target=java.lang.String\ getNombre()
comment4.text=\ Consultor\ del\ nombre\ de\ un\ paciente\n\ \ @return\ Nombre\ del\ paciente\n
comment5.params=
comment5.target=int\ getEdad()
comment5.text=\ Consultor\ de\ la\ edad\ de\ un\ paciente\n\ \ @return\ Edad\ del\ paciente\n
comment6.params=
comment6.target=long\ getTpoLlegadaUrgencias()
comment6.text=\ Consultor\ del\ tiempo\ de\ llegada\ a\ urgencias\ de\ un\ paciente\n\ \ @return\ Instante\ de\ tiempo\ en\ el\ que\ el\ paciente\ llego\ a\ urgencias\n
comment7.params=tpo
comment7.target=void\ setTpoLlegadaUrgencias(long)
comment7.text=\n\ Modifica\ el\ tiempo\ de\ llegada\ a\ urgencias\ de\ un\ paciente\n\ @param\ \ tpo\ Nuevo\ instante\ de\ llegada\ a\ urgencias\ del\ paciente\n
comment8.params=
comment8.target=boolean\ aplicarCura()
comment8.text=\ Aplica\ una\ cura\ a\ un\ paciente,\ de\ forma\ que\:\n\ \ El\ 95%\ de\ las\ veces\ la\ cura\ surte\ efecto\ y\ el\ paciente\ mejora\ un\ grado\n\ \ El\ 5%\ de\ las\ veces\ el\ paciente\ no\ responde\ y\ fallece\n\ \ @return\ true\ si\ la\ cura\ surte\ efecto,\ false\ si\ el\ paciente\ fallece\n
comment9.params=otro
comment9.target=int\ compareTo(Paciente)
comment9.text=\n\ Establece\ si\ un\ paciente\ debe\ ser\ atendido\ con\ mayor\ prioridad\ \n\ que\ otro,\ en\ base\ a\ su\ estado\ de\ gravedad\n\ -\ siendo\ el\ estado\ de\ gravedad\ mayor\ el\ 1\ y\ el\ menor\ el\ 5,\ \n\ \ \ \ pues\ se\ obvia\ el\ caso\ de\ pacientes\ fallecidos\ \n\ Cuando\ el\ estado\ de\ gravedad\ de\ ambos\ pacientes\ es\ el\ mismo,\ \n\ se\ atiende\ a\ los\ menores\ de\ <15\ anyos),\ cuanto\ menores\ antes,\ \n\ y\ luego\ a\ los\ ancianos\ (>65\ agnos),\ cuanto\ mayores\ antes.\n\ \n\ NOTA\:\ este\ metodo\ NO\ ES\ CONSISTENTE\ con\ equals,\ ya\ que\ su\ \n\ finalidad\ es\ diferente.\n\ \n\ @param\ \ otro\ \ Paciente\n\ @return\ int\ igual\ a\ 0\ si\ uno\ y\ otro\ paciente\ tienen\ la\ misma\ \n\ \ \ \ prioridad,\ menor\ que\ 0\ si\ un\ paciente\ tiene\ mayor\ prioridad\ \n\ \ \ \ que\ otro\ y\ mayor\ que\ 0\ en\ caso\ contrario.\n
numComments=12
