#BlueJ class context
comment0.params=numF\ numC
comment0.target=Imagen(int,\ int)
comment0.text=\ Crea\ una\ imagen\ de\ dimension\ alto\ x\ ancho\ todavia\ sin\ pixels\n\ \ @param\ alto,\ el\ numero\ de\ filas\ de\ la\ imagen\n\ \ @param\ ancho,\ el\ numero\ de\ columnas\ de\ la\ imagen\n
comment1.params=in\ numF\ numC\ fhash
comment1.target=Imagen(java.io.DataInputStream,\ int,\ int,\ int)
comment1.text=\ Crea\ una\ imagen\ de\ dimension\ alto\ x\ ancho\ cuyos\ pixeles\ se\ leen\ del\ \ \n\ \ fichero\ in.\ Se\ utiliza\ como\ funcion\ de\ dispersion\ fhash.\n\ \ Para\ cada\ pixel\ se\ guarda\ la\ componente\ roja,\ verde\ y\ azul\ \n\ \ (1\ byte\ sin\ signo\ por\ cada\ una)\n\ \ @param\ in\ el\ fichero\ de\ imagenes\n\ \ @param\ numF,\ el\ numero\ de\ filas\ de\ la\ imagen\n\ \ @param\ numC,\ el\ numero\ de\ columnas\ de\ la\ imagen\n\ \ @param\ fhash,\ funcion\ de\ dispersion\ a\ utilizar\:\ \n\ \ SUMA_TODOS,\ SUMA_PONDERADA_TODOS,\ SUMA_TRES,\ SUMA_PONDERADA_TRES\n
comment10.params=
comment10.target=int\ valorHashSumaPonderadaTodos()
comment11.params=
comment11.target=int\ valorHashSuma3()
comment12.params=
comment12.target=int\ valorHashSumaPonderada3()
comment2.params=numF\ numC\ fhash
comment2.target=Imagen(int,\ int,\ int)
comment2.text=\ Crea\ una\ imagen\ de\ dimension\ alto\ x\ ancho\ cuyos\ pixeles\ se\ generan\ \ \n\ \ de\ forma\ aleatoria.\ Se\ utiliza\ como\ funcion\ de\ dispersion\ fhash.\n\ \ @param\ alto,\ el\ numero\ de\ filas\ de\ la\ imagen\n\ \ @param\ ancho,\ el\ numero\ de\ columnas\ de\ la\ imagen\n\ \ @param\ fhash,\ funcion\ de\ dispersion\ a\ utilizar\:\ \n\ \ SUMA_TODOS,\ SUMA_PONDERADA_TODOS,\ SUMA_TRES,\ SUMA_PONDERADA_TRES\n
comment3.params=
comment3.target=int\ getAlto()
comment3.text=\ Devuelve\ la\ altura\ de\ la\ imagen\ \n\ @return\ int,\ el\ numero\ de\ filas\ de\ la\ imagen\n
comment4.params=
comment4.target=int\ getAncho()
comment4.text=\ Devuelve\ la\ anchura\ de\ la\ imagen\ \n\ @return\ int,\ el\ numero\ de\ columnas\ de\ la\ imagen\n
comment5.params=x\ y
comment5.target=Pixel\ getPixel(int,\ int)
comment5.text=\ Devuelve\ el\ pixel\ que\ ocupa\ la\ posicion\ (x,y)\ \n\ @param\ x,\ fila\n\ @param\ y,\ columna\n\ @return\ Pixel,\ el\ que\ ocupa\ la\ celda\ (x,y)\n
comment6.params=img
comment6.target=boolean\ equals(java.lang.Object)
comment6.text=\ Devuelve\ true\ si\ img\ es\ una\ Imagen\ igual\ que\ this,\ \n\ \ false\ en\ caso\ contrario\ \n\ \ @param\ img,\ Imagen\ a\ comparar\ con\ esta\n\ \ @return\ boolean,\ true\ si\ this\ Imagen\ es\ igual\ a\ img\ \n\ \ y\ false\ en\ caso\ contrario\n
comment7.params=
comment7.target=int\ hashCode()
comment7.text=\ Devuelve\ el\ valor\ de\ hashing\ de\ la\ imagen.\n\ \ @return\ int,\ valor\ de\ dispersion\n
comment8.params=fHash
comment8.target=int\ obtieneValorHash(int)
comment9.params=
comment9.target=int\ valorHashSumaTodos()
numComments=13
