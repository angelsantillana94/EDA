#BlueJ class context
comment0.params=
comment0.target=TestABB()
comment0.text=\ \n\ Constructor\n
comment1.params=
comment1.target=void\ crearMenuSuperior()
comment1.text=\ \n\ Menu\ superior\ de\ la\ aplicacion\n
comment10.params=v\ izq\ der
comment10.target=void\ insertarEquilibrado(int[],\ int,\ int)
comment10.text=\ \n\ Inserta\ los\ datos\ del\ vector\ ordenado\ v\ de\ forma\ que\ \n\ el\ ABB\ quede\ equilibrado\n\ @param\ v\ Vector\ ordenado\ de\ enteros\n\ @param\ izq\ \ \ Posicion\ inicial\ del\ intervalo\n\ @param\ der\ \ \ Posicion\ final\ del\ intervalo\n
comment11.params=texto
comment11.target=java.lang.Integer\ leerNodo(java.lang.String)
comment11.text=\ \n\ Lee\ un\ entero\n\ @param\ texto\ Texto\ del\ mensaje\n\ @return\ Numero\ entero\ leido\n
comment12.params=
comment12.target=void\ calculateLocations()
comment12.text=\ \n\ Calculo\ de\ la\ posicion\ de\ los\ nodos\n
comment13.params=n
comment13.target=java.awt.Dimension\ calculateSubtreeSize(NodoABB)
comment13.text=\ \n\ Calculo\ del\ tamanyo\ del\ subarbol\ de\ raiz\ n\n\ @param\ n\ Nodo\ a\ calcular\n\ @return\ Dimensiones\ del\ nodo\n
comment14.params=n\ left\ right\ top
comment14.target=void\ calculateLocation(NodoABB,\ int,\ int,\ int)
comment14.text=\ \n\ Calculo\ de\ la\ posicion\ de\ los\ nodos\ en\ el\ subarbol\ de\ raiz\ n\n\ @param\ n\ Nodo\ a\ calcular\n\ @param\ left\ Posicion\ izquierda\n\ @param\ right\ Posicion\ derecha\n\ @param\ top\ \ \ Posicion\ superior\n
comment15.params=g\ n\ px\ py\ yoffs
comment15.target=void\ drawTree(java.awt.Graphics2D,\ NodoABB,\ int,\ int,\ int)
comment15.text=\ \n\ Dibujo\ del\ arbol\n\ @param\ g\ Area\ grafica\n\ @param\ n\ Nodo\ a\ dibujar\n\ @param\ px\ Posicion\ horizontal\n\ @param\ py\ Posicion\ vertical\n\ @param\ yoffs\ Incremento\ vertical\n
comment16.params=g
comment16.target=void\ paint(java.awt.Graphics)
comment16.text=\n\ Redibujado\ del\ area\ grafica\n\ @param\ g\ Area\ grafica\n
comment17.params=args
comment17.target=void\ main(java.lang.String[])
comment17.text=\ \n\ Programa\ principal\n\ @param\ args\ \ Argumentos\ del\ programa\n
comment2.params=
comment2.target=void\ crearMenuInferior()
comment2.text=\ \n\ Menu\ inferior\ de\ la\ aplicacion\n
comment3.params=texto\ c
comment3.target=javax.swing.JButton\ crearBoton(java.lang.String,\ java.awt.Color)
comment3.text=\ \n\ Crea\ un\ boton\ del\ menu\n\ @param\ \ texto\ Etiqueta\ del\ boton\n\ @param\ \ c\ \ \ \ \ Color\ del\ boton\n\ @return\ Nuevo\ boton\ creado\ \n
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.text=\ \n\ Pulsacion\ de\ los\ botones\n\ @param\ e\ Evento\n
comment5.params=
comment5.target=void\ generarABBEquilibrado()
comment5.text=\ \n\ Genera\ un\ ABB\ equilibrado\n
comment6.params=
comment6.target=void\ generarABBDegenerado()
comment6.text=\ \n\ Genera\ un\ ABB\ degenerado\n
comment7.params=
comment7.target=void\ generarABBAleatorio()
comment7.text=\ \n\ Genera\ un\ ABB\ aleatrorio\n
comment8.params=actual
comment8.target=int\ altura(NodoABB)
comment8.text=\ \n\ Devuelve\ la\ altura\ de\ un\ nodo\n\ @param\ <E>\ \ \ \ \ \ \ Tipo\ gen\u00E9rico\ del\ nodo\n\ @param\ actual\ \ \ \ Nodo\ del\ que\ se\ quiere\ conocer\ su\ altura\n\ @return\ Altura\ del\ nodo\ actual,\ o\ -1\ si\ actual\ es\ null\n
comment9.params=talla
comment9.target=int[]\ generarVectorAleatorio(int)
comment9.text=\ \n\ Genera\ un\ vector\ aleatorio\ de\ numeros\ enteros\n\ @param\ talla\ Longitud\ del\ vector\n\ @return\ Vector\ aleatorio\ de\ numeros\ enteros\n
numComments=18
